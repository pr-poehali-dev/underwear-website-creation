import { useState, useEffect } from 'react';
import { Card } from '@/components/ui/card';
import Icon from '@/components/ui/icon';
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';

interface DayData {
  day: number;
  message: string;
  emoji: string;
}

const adventMessages: DayData[] = [
  { day: 1, message: '–ü–µ—Ä–≤—ã–π –¥–µ–Ω—å –∑–∏–º—ã! –ü—É—Å—Ç—å –¥–µ–∫–∞–±—Ä—å –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ä–∞–¥–æ—Å—Ç—å –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–æ ‚ú®', emoji: 'üéÑ' },
  { day: 2, message: '–í—Ä–µ–º—è —É–∫—Ä–∞—à–∞—Ç—å –¥–æ–º! –°–æ–∑–¥–∞–π—Ç–µ —É—é—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É üè†', emoji: 'üéÄ' },
  { day: 3, message: '–ù–∞–ø–∏—à–∏—Ç–µ –ø–∏—Å—å–º–æ –î–µ–¥—É –ú–æ—Ä–æ–∑—É! –ú–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è üíå', emoji: '‚úâÔ∏è' },
  { day: 4, message: '–î–µ–Ω—å –≥–æ—Ä—è—á–µ–≥–æ –∫–∞–∫–∞–æ —Å –∑–µ—Ñ–∏—Ä–æ–º! –°–æ–≥—Ä–µ–π—Ç–µ—Å—å ‚òï', emoji: '‚òï' },
  { day: 5, message: '–°–ª–µ–ø–∏—Ç–µ —Å–Ω–µ–≥–æ–≤–∏–∫–∞ –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ —Å–Ω–µ–∂–Ω–æ–≥–æ –∞–Ω–≥–µ–ª–∞! ‚õÑ', emoji: '‚õÑ' },
  { day: 6, message: '–ò—Å–ø–µ–∫–∏—Ç–µ –∏–º–±–∏—Ä–Ω–æ–µ –ø–µ—á–µ–Ω—å–µ! –î–æ–º –Ω–∞–ø–æ–ª–Ω–∏—Ç—Å—è –∞—Ä–æ–º–∞—Ç–æ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ üç™', emoji: 'üç™' },
  { day: 7, message: '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —Ñ–∏–ª—å–º —Å —Å–µ–º—å–µ–π! üé¨', emoji: 'üé¨' },
  { day: 8, message: '–£–∫—Ä–∞—Å—å—Ç–µ –µ–ª–∫—É –≤–º–µ—Å—Ç–µ —Å –±–ª–∏–∑–∫–∏–º–∏! üéÑ', emoji: 'üéÑ' },
  { day: 9, message: '–°–¥–µ–ª–∞–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç–∫—É —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏ –¥–ª—è –¥—Ä—É–∑–µ–π! üíù', emoji: 'üíù' },
  { day: 10, message: '–î–µ–Ω—å –¥–æ–±—Ä—ã—Ö –¥–µ–ª! –ü–æ–º–æ–≥–∏—Ç–µ —Ç–µ–º, –∫—Ç–æ –Ω—É–∂–¥–∞–µ—Ç—Å—è üíó', emoji: 'üíó' },
  { day: 11, message: '–°–ø–æ–π—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–µ –ø–µ—Å–Ω–∏! –í –ª–µ—Å—É —Ä–æ–¥–∏–ª–∞—Å—å –µ–ª–æ—á–∫–∞ üéµ', emoji: 'üéµ' },
  { day: 12, message: '–£—Å—Ç—Ä–æ–π—Ç–µ —Å–µ–º–µ–π–Ω—É—é —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é –≤ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã—Ö –Ω–∞—Ä—è–¥–∞—Ö! üì∏', emoji: 'üì∏' },
  { day: 13, message: '–ü—Ä–æ–≥—É–ª—è–π—Ç–µ—Å—å –ø–æ –∑–∏–º–Ω–µ–º—É –ª–µ—Å—É –∏–ª–∏ –ø–∞—Ä–∫—É! –ö—Ä–∞—Å–æ—Ç–∞ –ø—Ä–∏—Ä–æ–¥—ã üå≤', emoji: 'üå≤' },
  { day: 14, message: '–°–¥–µ–ª–∞–π—Ç–µ –≥–∏—Ä–ª—è–Ω–¥—É –∏–∑ –±—É–º–∞–≥–∏ –∏–ª–∏ –º–∞–Ω–¥–∞—Ä–∏–Ω–æ–≤! üçä', emoji: 'üé®' },
  { day: 15, message: '–°–µ—Ä–µ–¥–∏–Ω–∞ –¥–µ–∫–∞–±—Ä—è! –ü–æ–ª–æ–≤–∏–Ω–∞ –ø—É—Ç–∏ –∫ –ø—Ä–∞–∑–¥–Ω–∏–∫—É –ø—Ä–æ–π–¥–µ–Ω–∞! üéâ', emoji: 'üéâ' },
  { day: 16, message: '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –±–ª—é–¥–æ –≤–∞—à–µ–π —Å–µ–º—å–∏! üçΩÔ∏è', emoji: 'üçΩÔ∏è' },
  { day: 17, message: '–ü–æ—á–∏—Ç–∞–π—Ç–µ –∑–∏–º–Ω–∏–µ —Å–∫–∞–∑–∫–∏ —É –∫–∞–º–∏–Ω–∞ –∏–ª–∏ –ø–æ–¥ –ø–ª–µ–¥–æ–º! üìö', emoji: 'üìö' },
  { day: 18, message: '–ü–æ–∫–∞—Ç–∞–π—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—å–∫–∞—Ö –∏–ª–∏ —Å–∞–Ω–∫–∞—Ö! –ó–∏–º–Ω–∏–µ –∑–∞–±–∞–≤—ã ‚õ∏Ô∏è', emoji: '‚õ∏Ô∏è' },
  { day: 19, message: '–£–ø–∞–∫—É–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –∫—Ä–∞—Å–∏–≤–æ–π –±—É–º–∞–≥–æ–π –∏ –ª–µ–Ω—Ç–∞–º–∏! üéÅ', emoji: 'üéÅ' },
  { day: 20, message: '–°–¥–µ–ª–∞–π—Ç–µ –∫–æ—Ä–º—É—à–∫—É –¥–ª—è –ø—Ç–∏—Ü! –ü–æ–º–æ–≥–∏—Ç–µ –ø–µ—Ä–Ω–∞—Ç—ã–º –¥—Ä—É–∑—å—è–º üê¶', emoji: 'üê¶' },
  { day: 21, message: '–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è –Ω–æ—á—å –≤ –≥–æ–¥—É! –ó–∞–∂–≥–∏—Ç–µ —Å–≤–µ—á–∏ üïØÔ∏è', emoji: 'üïØÔ∏è' },
  { day: 22, message: '–°–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –Ω–∞ –Ω–æ–≤—ã–π –≥–æ–¥! üìù', emoji: 'üìù' },
  { day: 23, message: '–£—Å—Ç—Ä–æ–π—Ç–µ –≤–µ—á–µ—Ä –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏–≥—Ä —Å —Å–µ–º—å–µ–π! üé≤', emoji: 'üé≤' },
  { day: 24, message: '–°–æ—á–µ–ª—å–Ω–∏–∫! –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∫ –ø—Ä–∞–∑–¥–Ω–∏–∫—É! ‚≠ê', emoji: '‚≠ê' },
  { day: 25, message: '–†–æ–∂–¥–µ—Å—Ç–≤–æ –•—Ä–∏—Å—Ç–æ–≤–æ! –ú–∏—Ä –∏ —Ä–∞–¥–æ—Å—Ç—å –≤–∞—à–µ–º—É –¥–æ–º—É! üåü', emoji: 'üåü' },
  { day: 26, message: '–í—Ä–µ–º—è –æ—Ç–¥—ã—Ö–∞ –ø–æ—Å–ª–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤! –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–∫–æ–µ–º üòå', emoji: 'üòå' },
  { day: 27, message: '–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ª—é–±–∏–º—ã–µ –º–æ–º–µ–Ω—Ç—ã –ø—Ä–∞–∑–¥–Ω–∏–∫–∞! üí´', emoji: 'üí´' },
  { day: 28, message: '–ü–æ–¥–≤–µ–¥–∏—Ç–µ –∏—Ç–æ–≥–∏ –≥–æ–¥–∞! –ß—Ç–æ –±—ã–ª–æ —Ö–æ—Ä–æ—à–µ–≥–æ? üìä', emoji: 'üìä' },
  { day: 29, message: '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è —É–±–æ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –ù–æ–≤—ã–º –≥–æ–¥–æ–º! üßπ', emoji: 'üßπ' },
  { day: 30, message: '–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —Å—Ç–æ–ª! –û–ª–∏–≤—å–µ –∏ —à–∞–º–ø–∞–Ω—Å–∫–æ–µ ü•Ç', emoji: 'ü•Ç' },
  { day: 31, message: '–° –ù–æ–≤—ã–º –ì–æ–¥–æ–º! –ü—É—Å—Ç—å —Å–±—É–¥—É—Ç—Å—è –≤—Å–µ –º–µ—á—Ç—ã! üéÜ', emoji: 'üéÜ' },
];

const Snowflakes = () => {
  const snowflakes = Array.from({ length: 30 }, (_, i) => ({
    id: i,
    left: `${Math.random() * 100}%`,
    animationDuration: `${Math.random() * 10 + 10}s`,
    animationDelay: `${Math.random() * 10}s`,
    fontSize: `${Math.random() * 10 + 10}px`,
  }));

  return (
    <>
      {snowflakes.map((flake) => (
        <div
          key={flake.id}
          className="snowflake"
          style={{
            left: flake.left,
            animationDuration: flake.animationDuration,
            animationDelay: flake.animationDelay,
            fontSize: flake.fontSize,
          }}
        >
          ‚ùÑ
        </div>
      ))}
    </>
  );
};

const Index = () => {
  const [openedDays, setOpenedDays] = useState<number[]>([]);
  const [selectedDay, setSelectedDay] = useState<DayData | null>(null);
  const [currentDate] = useState(new Date());

  useEffect(() => {
    const saved = localStorage.getItem('adventOpened');
    if (saved) {
      setOpenedDays(JSON.parse(saved));
    }
  }, []);

  const handleDayClick = (dayData: DayData) => {
    const today = currentDate.getDate();
    const currentMonth = currentDate.getMonth();

    if (currentMonth !== 11) {
      alert('–ê–¥–≤–µ–Ω—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ –¥–µ–∫–∞–±—Ä–µ! üéÑ');
      return;
    }

    if (dayData.day > today) {
      alert('–≠—Ç–æ—Ç –¥–µ–Ω—å –µ—â–µ –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª! –ù–∞–±–µ—Ä–∏—Ç–µ—Å—å —Ç–µ—Ä–ø–µ–Ω–∏—è üéÖ');
      return;
    }

    if (!openedDays.includes(dayData.day)) {
      const newOpenedDays = [...openedDays, dayData.day];
      setOpenedDays(newOpenedDays);
      localStorage.setItem('adventOpened', JSON.stringify(newOpenedDays));
    }

    setSelectedDay(dayData);
  };

  const isUnlocked = (day: number) => {
    const today = currentDate.getDate();
    const currentMonth = currentDate.getMonth();
    return currentMonth === 11 && day <= today;
  };

  const isOpened = (day: number) => openedDays.includes(day);

  return (
    <div className="min-h-screen relative overflow-hidden bg-gradient-to-b from-[#1a3a2e] via-[#1f4d3a] to-[#0f2419]">
      <Snowflakes />

      <div className="absolute top-0 left-0 w-full h-32 opacity-20">
        <div className="flex justify-around items-start">
          {Array.from({ length: 20 }).map((_, i) => (
            <div key={i} className="text-accent text-2xl glow" style={{ animationDelay: `${i * 0.2}s` }}>
              üí°
            </div>
          ))}
        </div>
      </div>

      <div className="container mx-auto px-4 py-12 relative z-10">
        <div className="text-center mb-12">
          <h1 className="text-5xl md:text-7xl font-bold text-accent mb-4 drop-shadow-lg">
            üéÑ –ê–¥–≤–µ–Ω—Ç –ö–∞–ª–µ–Ω–¥–∞—Ä—å üéÑ
          </h1>
          <p className="text-xl md:text-2xl text-foreground/90">
            –û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –æ–∫–æ—à–∫—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–µ–∫–∞–±—Ä—è!
          </p>
          <p className="text-lg text-muted-foreground mt-2">
            31 –¥–µ–Ω—å –≤–æ–ª—à–µ–±—Å—Ç–≤–∞ –∏ –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è ‚ú®
          </p>
        </div>

        <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-7 gap-4 max-w-7xl mx-auto">
          {adventMessages.map((dayData) => {
            const unlocked = isUnlocked(dayData.day);
            const opened = isOpened(dayData.day);

            return (
              <Card
                key={dayData.day}
                className={`
                  relative h-32 cursor-pointer transition-all duration-300
                  ${unlocked ? 'hover:scale-105 hover:shadow-2xl' : 'opacity-50 cursor-not-allowed'}
                  ${opened ? 'bg-primary/30 border-primary' : 'bg-card border-2'}
                  ${!unlocked ? 'grayscale' : ''}
                `}
                onClick={() => unlocked && handleDayClick(dayData)}
              >
                <div className="absolute inset-0 flex flex-col items-center justify-center p-4">
                  {opened ? (
                    <>
                      <div className="text-4xl mb-2">{dayData.emoji}</div>
                      <div className="text-sm font-semibold text-center">{dayData.day} –¥–µ–∫</div>
                    </>
                  ) : (
                    <>
                      <div className="text-5xl mb-2">
                        {unlocked ? 'üéÅ' : 'üîí'}
                      </div>
                      <div className="text-2xl font-bold">{dayData.day}</div>
                    </>
                  )}
                </div>

                {!unlocked && (
                  <div className="absolute top-2 right-2">
                    <Icon name="Lock" size={16} className="text-muted-foreground" />
                  </div>
                )}
              </Card>
            );
          })}
        </div>

        <div className="mt-12 text-center">
          <div className="inline-block bg-card/80 backdrop-blur-sm px-8 py-4 rounded-lg border-2 border-accent">
            <p className="text-lg">
              <span className="text-accent font-bold">
                {openedDays.length}
              </span>
              {' '}–∏–∑ 31 –¥–Ω—è –æ—Ç–∫—Ä—ã—Ç–æ
            </p>
            <div className="w-full bg-muted h-2 rounded-full mt-2 overflow-hidden">
              <div
                className="bg-accent h-full transition-all duration-500"
                style={{ width: `${(openedDays.length / 31) * 100}%` }}
              />
            </div>
          </div>
        </div>
      </div>

      <Dialog open={!!selectedDay} onOpenChange={() => setSelectedDay(null)}>
        <DialogContent className="sm:max-w-md bg-card border-accent">
          <DialogHeader>
            <DialogTitle className="text-center text-2xl">
              {selectedDay && (
                <>
                  <div className="text-6xl mb-4">{selectedDay.emoji}</div>
                  <div>{selectedDay.day} –¥–µ–∫–∞–±—Ä—è</div>
                </>
              )}
            </DialogTitle>
          </DialogHeader>
          <div className="text-center py-6">
            <p className="text-lg leading-relaxed">{selectedDay?.message}</p>
          </div>
        </DialogContent>
      </Dialog>

      <div className="fixed bottom-0 left-0 w-full h-24 pointer-events-none opacity-30">
        <div className="flex justify-around items-end h-full">
          {Array.from({ length: 8 }).map((_, i) => (
            <div key={i} className="text-6xl" style={{ transform: `translateY(${Math.random() * 20}px)` }}>
              üå≤
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Index;
